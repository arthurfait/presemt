#:kivy 1.0
#:import fc functools

<LoadingScreen>:
    AnchorLayout:
        Label:
            text: 'PreseMT is loading...'

<SelectorScreen>:
    AnchorLayout:
        Image:
            on_touch_down: root.app.create_empty_project()
            source: 'data/add.png'
            size: self.texture_size
            size_hint: None, None

<PlaneObject>:
    size_hint: None, None
    canvas:
        Color:
            rgba: (1, 1, 0, .4) if self.selected else (0, 1, 0, .4)
        Rectangle:
            size: self.size

<TextPlaneObject>:
    size: label.size
    Label:
        id: label
        pos: self.pos
        size: self.texture_size
        text: root.text
        font_size: root.font_size

<ImagePlaneObject>:
    size: image.size
    on_size: root.scale = min(1, 1. / (max(1, self.width, self.height) / 640.))
    Image:
        id: image
        size: self.texture_size
        source: root.source

<VideoPlaneObject>:
    Video:
        play: True
        source: root.source

#
# Panels
#
[PanelTitle@Label]:
    font_size: 24
    text: ctx.title
    size_hint_y: None
    height: self.texture_size[1]
    text_size: (self.width, None)
[PanelTitle2@Label]:
    font_size: 24
    text: ctx.title
    size_hint_y: None
    height: self.texture_size[1]
    text_size: (self.width, None)

<Panel>:
    x: 80
    canvas:
        Color:
            rgba: (0.2, .2, .2, .8)
        Rectangle:
            pos: self.pos
            size: self.size

[ImageButtonPanel@ButtonBehavior+Image]:
    source: ctx.source
    size: self.texture_size
    size_hint_x: None
    button_grab: True
    on_press: ctx.callback()

<ImageButton>:
    width: self.texture_size[0]
    button_grab: True
    size_hint_x: None

<TextStackEntry>:
    size_hint_y: None
    size: [max(40, x + 20) for x in label.texture_size]
    padding: 10

    canvas.before:
        Color:
            rgba: .1, .1, .1, .5
        Rectangle:
            pos: self.pos
            size: self.size

    Label:
        id: label
        text: root.text
        text_size: (self.width - 20, None)

    ImageButton:
        source: 'data/text-del.png'
        on_press: root.panel.stack.remove_widget(root)


<TextPanel>:
    width: 300
    size_hint_x: None
    textinput: textinput
    stack: stack

    BoxLayout:
        padding: 10
        spacing: 10
        pos: root.pos
        orientation: 'vertical'

        PanelTitle:
            title: 'Add a text'

        BoxLayout:
            size_hint_y: None
            height: 32
            spacing: 20

            TextInput:
                id: textinput

            ImageButtonPanel:
                source: 'data/text-add.png'
                callback: fc.partial(root.add_text)

        ScrollView:
            scroll_timeout: 100
            StackLayout:
                id: stack
                size_hint_y: None



<LocalFilePanel>:
    width: 340
    size_hint_x: None

    BoxLayout:
        orientation: 'vertical'
        pos: root.pos
        size: root.size
        padding: 10
        spacing: 10

        PanelTitle:
            title: 'Add a media'

        FileChooserIconView:
            path: u'~'
            filters: root.imgtypes if img.only else root.vidtypes if vid.only else root.suptypes
            on_submit: root.ctrl.from_localfile(args[2], source=args[1][0])

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: 40
            spacing: 10
            ToggleButton:
                id: img
                only: self.state == 'down'
                text: 'Images'
                group: 'filetype'
            ToggleButton:
                id: vid
                only: self.state == 'down'
                text: 'Videos'
                group: 'filetype'


[ToolbarButton@ButtonBehavior+Image]:
    source: 'data/%s.png' % ctx.image
    size: self.texture_size
    size_hint: None, None
    on_press: ctx.callback()
    button_grab: True
    canvas.before:
        Color:
            rgba: 1, 1, 1, 0.5 if self.is_hover else 0
        Rectangle:
            pos: self.pos
            size: self.size


<Slide>:
    button_grab: True
    canvas.after:
        Color:
            rgba: [0.5411, 0.6862, 0.2352, .1] if root.selected else (0, 0, 0, 0)
        Rectangle:
            size: self.norm_image_size
            pos: self.center_x - self.norm_image_size[0] / 2., self.center_y - self.norm_image_size[1] / 2.

    height: self.norm_image_size[1] + label.height * 2

    Label:
        id: label
        text: str(root.index + 1)
        x: root.x
        top: root.top
        font_size: 8
        size: (root.width, self.texture_size[1] + 5)
        canvas:
            Color:
                rgba: [0.5411, 0.6862, 0.2352, 1] if root.selected else (0, 0, 0, 1)
            Rectangle:
                pos: self.pos
                size: self.size

<MainScreen>:
    plane: plane
    config: config
    tb_objects: tb_objects
    tb_slides: tb_slides

    MainPlane:
        id: plane
        scale_min: 0.20
        scale_max: 20
        on_touch_down: root.unselect()
        canvas.after:
            Color:
                rgba: 1, 0, 0, .5
            Line:
                points: root.selection_points

    # Config menu
    FloatLayout:
        size_hint_x: None
        x: 30
        id: config

    # Toolbar
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: None
        width: 80
        canvas:
            Color:
                rgba: (.1, .1, .1, .9)
            Rectangle:
                size: self.size
                pos: self.pos

        BoxLayout:
            id: tb_objects
            orientation: 'vertical'
            size_hint_y: None

            ToolbarButton:
                image: 'text'
                callback: root.toggle_text_panel

            ToolbarButton:
                image: 'image'
                callback: root.toggle_localfile_panel

        Widget:

        BoxLayout:
            orientation: 'vertical'

            ToolbarButton:
                image: 'lock'
                callback: root.toggle_lock

            ToolbarButton:
                image: 'savefile'
                callback: root.do_save

            ToolbarButton:
                image: 'home'
                callback: root.go_home


    # Slides
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: None
        width: 80
        pos_hint: {'right': 1}

        canvas:
            Color:
                rgba: (.1, .1, .1, .9)
            Rectangle:
                size: self.size
                pos: self.pos

        BoxLayout:
            size_hint_y: None
            height: 80
            ToolbarButton:
                image: 'add'
                callback: root.add_slide

        ScrollView:
            scroll_timeout: 100
            StackLayout:
                size_hint_y: None
                id: tb_slides


# Debugging stuff, merge if you want in the MainScreen rule
<azdpok>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: None, None
        size: 250, 30
        canvas:
            Color:
                rgba: (.5, .5, .5, .1)
            Rectangle:
                size: self.size
                pos: self.pos
        pos_hint: {'right': 1, 'y': 0}

        BoxLayout:
            Label:
                text: 'Position'
            Label:
                size_hint_y: None
                height: self.texture_size[1] + 10
                text: '%3.2f %3.2f' % plane.pos
        BoxLayout:
            Label:
                text: 'Scale'
            Label:
                size_hint_y: None
                height: self.texture_size[1] + 10
                text: '%3.2f' % plane.scale
        BoxLayout:
            Label:
                text: 'Rotation'
            Label:
                size_hint_y: None
                height: self.texture_size[1] + 10
                text: '%3.2f' % plane.rotation

        BoxLayout:
            Label:
                text: 'Grid Spacing'
            Slider:
                size_hint_y: None
                height: 40
                on_value: plane.grid_spacing = int(args[1])
                value: plane.grid_spacing
                min: 10
                max: 100

