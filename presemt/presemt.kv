#:kivy 1.0
#:import fc functools

# Color scheme
#:set bg_source 'data/images/background.jpg'
# dad6ca (light), 5f6062 (dark)
##:set bg_color [x / 255. for x in (0x5f, 0x60, 0x62, 0xff)]
##:set tb_color [x / 255. for x in (0xda, 0xd6, 0xca, 0xff)]
##:set icon_color [x / 255. for x in (0x5f, 0x60, 0x62, 0x66)]
##:set icon_color_selected [x / 255. for x in (0x5f, 0x60, 0x62, 0xff)]

#:set bg_color            [x / 255. for x in (0x41, 0x41, 0x41, 0xff)]
#:set icon_color          [x / 255. for x in (0xbb, 0xbb, 0xbb, 0xaa)]
#:set icon_color_selected [x / 255. for x in (0xee, 0xee, 0xee, 0xff)]
#:set tb_color            [x / 255. for x in (0x51, 0x51, 0x51, 0xff)]
#:set title_color         [x / 255. for x in (0xee, 0xee, 0xee, 0xff)]

<Screen>:
    canvas:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            source: bg_source
            size: self.size

<LoadingScreen>:
    AnchorLayout:
        Label:
            text: 'PreseMT is loading...'
            color: title_color

<Modal>:
    canvas:
        Color:
            rgba: 0, 0, 0, self.alpha * 0.9
        Rectangle:
            pos: self.pos
            size: self.size

<ModalConfirm>:
    canvas:
        Color:
            rgba: 0, 0, 0, self.alpha * 0.9
        Rectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        spacing: 20
        size_hint: None, None
        center_y: root.top - root.center_y * root.alpha
        center_x: root.center_x

        ToolbarButton:
            image: 'left'
            callback: root.app.leave_delete
            no_toggle: True
            size: 56, 56

        ToolbarButton:
            image: 'thumbs-up'
            callback: fc.partial(root.app.delete_project, root.filename, True)
            no_toggle: True
            size: 56, 56

<ModalSelect>:
    BoxLayout:
        spacing: 20
        size_hint: None, None
        center_y: root.top - root.center_y * root.alpha
        center_x: root.center_x

        ToolbarButton:
            image: 'left'
            callback: root.app.leave_load
            no_toggle: True
            size: 56, 56

        ToolbarButton:
            image: 'trash'
            callback: fc.partial(root.app.delete_project, root.filename)
            no_toggle: True
            size: 56, 56

        ToolbarButton:
            image: 'edit'
            callback: fc.partial(root.app.do_edit, root.filename)
            no_toggle: True
            size: 56, 56

        ToolbarButton:
            image: 'eye'
            callback: fc.partial(root.app.do_play, root.filename)
            no_toggle: True
            size: 56, 56

<ModalHelp>:
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            padding: 100
            orientation: 'vertical'
            BoxLayout:
                Image:
                    source: 'icon.png'
                    width: 128
                    size_hint_x: None
                Label:
                    id: label
                    text: root.text_about
            BoxLayout:
                size_hint_y: None
                height: 40
                spacing: 40
                Button:
                    text: 'About'
                    on_release: label.text = ''; label.text = root.text_about
                Button:
                    text: 'Project selector'
                    on_release: label.text = ''; label.text = root.text_help_selector
                Button:
                    text: 'Main screen'
                    on_release: label.text = ''; label.text = root.text_help_main

        ToolbarButton:
            image: 'left'
            callback: root.app.leave_help
            no_toggle: True
            size: 56, 56



[SelectorItem@ButtonBehavior+FloatLayout]:
    size_hint_x: None
    width: 256
    canvas:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            source: 'data/selector.png'
            size: self.size
            pos: self.pos
        Color:
            rgba: 1, 1, 1, .3
        Rectangle:
            texture: ctx.tex2
            size: ctx['tex2'].size if ctx['tex2'] else (0, 0)
            pos: (self.center_x - ctx['tex2'].size[0] / 2. + 20, self.center_y - ctx['tex2'].size[1] / 2.) if ctx['tex2'] else (0, 0)
        Color:
            rgba: 1, 1, 1, .7
        Rectangle:
            texture: ctx.tex1
            size: ctx['tex1'].size if ctx['tex1'] else (0, 0)
            pos: (self.center_x - ctx['tex1'].size[0] / 2. - 20, self.center_y - ctx['tex1'].size[1] / 2. + 40) if ctx['tex1'] else (0, 0)
        Color:
            rgb: 1, 1, 1
        Rectangle:
            texture: ctx.tex0
            size: ctx['tex0'].size if ctx['tex0'] else (0, 0)
            pos: (self.center_x - ctx['tex0'].size[0] / 2., self.center_y - ctx['tex0'].size[1] / 2. + 20) if ctx['tex0'] else (0, 0)
    button_grab: True
    on_press: ctx.app.ask_load(ctx.filename)

    BoxLayout:
        pos: root.pos
        orientation: 'vertical'
        padding: 8
        Label:
            color: bg_color
            text: ctx.title
        BoxLayout:
            size_hint_y: None
            height: 50
            BoxLayout:
                orientation: 'vertical'
                padding: 10
                Label:
                    size_hint_y: None
                    color: bg_color
                    height: self.texture_size[1]
                    text: ctx.time
                Label:
                    size_hint_y: None
                    height: self.texture_size[1]
                    font_size: 10
                    color: bg_color[:3] + [.6]
                    text: '%d slides, %d objects' % (ctx.slide_count, ctx.obj_count)

<SelectorScreen>:
    view: view
    AnchorLayout:
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None

            BoxLayout:
                padding: 20
                spacing: 20
                id: firstbox

                Label:
                    text: 'PreseMT'
                    text_size: self.width - 20, self.height
                    font_size: 28
                    color: title_color
                    size_hint_y: None
                    height: 56

                ToolbarButton:
                    image: 'info'
                    callback: root.show_help
                    no_toggle: True

                ToolbarButton:
                    image: 'refresh'
                    callback: root.refresh
                    no_toggle: True

                ToolbarButton:
                    image: 'add'
                    callback: root.app.edit_project
                    no_toggle: True


            ScrollView:
                size_hint_y: None
                height: 276
                id: scrollview
                StackLayout:
                    spacing: 10
                    padding: 10
                    orientation: 'tb-lr'
                    id: view
                    size_hint_x: None

            Widget:
                size_hint: None, None
                size: firstbox.size

<PlaneObject>:
    size_hint: None, None
    canvas:
        Color:
            rgba: ((1, 1, 0, .4) if self.selected else (0, 1, 0, .4)) if root.ctrl.is_edit else (0, 0, 0, 0)
        Rectangle:
            size: self.size
            pos: -self.width / 2., -self.height / 2.

<TextPlaneObject>:
    size: label.size
    Label:
        id: label
        pos: -self.width / 2., -self.height / 2.
        size: self.texture_size
        text: root.text
        font_size: root.font_size

<ImagePlaneObject>:
    size: image.size
    Image:
        id: image
        pos: -self.width / 2., -self.height / 2.
        size: self.texture_size
        source: root.source

<VideoPlaneObject>:
    size: video.size
    Video:
        id: video
        pos: -self.width / 2., -self.height / 2.
        size: self.texture_size
        source: root.source
        play: True

#
# Panels
#
[PanelTitle@Label]
    font_size: 24
    text: ctx.title
    size_hint_y: None
    height: self.texture_size[1]
    text_size: (self.width, None)
    color: title_color

<Panel>:
    x: 56
    canvas:
        Color:
            rgba: bg_color
            #(.16, .18, .19, .9)
        BorderImage:
            border: 0, 16, 0, 0
            source: 'data/toolbar_left.png'
            pos: self.pos
            size: self.size

[ImageButtonPanel@ButtonBehavior+Image]:
    source: ctx.source
    size: self.texture_size
    size_hint_x: None
    button_grab: True
    on_press: ctx.callback()

<ImageButton>:
    width: self.texture_size[0]
    button_grab: True
    size_hint_x: None

<TextStackEntry>:
    size_hint_y: None
    size: [max(40, x + 20) for x in label.texture_size]
    padding: 10

    canvas.before:
        Color:
            rgba: .1, .1, .1, .5
        Rectangle:
            pos: self.pos
            size: self.size

    Label:
        id: label
        text: root.text
        text_size: (self.width - 20, None)

    ImageButton:
        source: 'data/text-del.png'
        on_press: root.panel.stack.remove_widget(root)


<TextPanel>:
    width: 300
    size_hint_x: None
    textinput: textinput
    stack: stack
    on_close: textinput.focus = False

    BoxLayout:
        padding: 10
        spacing: 10
        pos: root.pos
        orientation: 'vertical'

        PanelTitle:
            title: 'Add a text'

        BoxLayout:
            size_hint_y: None
            height: max(32, textinput.height)
            spacing: 20

            TextInput:
                id: textinput

            ImageButtonPanel:
                source: 'data/text-add.png'
                callback: root.add_text

        ScrollView:
            scroll_timeout: 100
            StackLayout:
                id: stack
                size_hint_y: None



<LocalFilePanel>:
    width: 340
    size_hint_x: None

    BoxLayout:
        orientation: 'vertical'
        pos: root.pos
        size: root.size
        padding: 10
        spacing: 10

        PanelTitle:
            title: 'Add a media'

        FileChooserIconView:
            path: root.path
            filters: root.imgtypes if img.only else root.vidtypes if vid.only else root.suptypes
            on_submit: root.ctrl.from_localfile(args[2], source=args[1][0])

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: 40
            spacing: 10
            ToggleButton:
                id: img
                only: self.state == 'down'
                text: 'Images'
                group: 'filetype'
            ToggleButton:
                id: vid
                only: self.state == 'down'
                text: 'Videos'
                group: 'filetype'


[ToolbarButton@ToggleButton]:
    source: 'data/%s.png' % ctx.image
    size: ctx.size if 'size' in ctx else image.texture_size
    size_hint: ctx.size_hint if 'size_hint' in ctx else (None, None)
    on_release: ctx.callback(); self._do_press() if ctx.no_toggle else None
    #button_grab: True
    group: ctx.group if 'group' in ctx else None
    visible: True
    no_toggle: ctx.no_toggle if 'no_toggle' in ctx else False
    canvas:
        Clear
    Image:
        id: image
        source: root.source if root.visible else 'data/transparent.png'
        color: ctx.color if 'color' in ctx else (1, 1, 1, 1)
        color: (ctx.color if 'color' in ctx else icon_color) if root.state == 'normal' else icon_color_selected
        size_hint: (None, None)
        size: [x * 0.8 for x in root.size]
        x: root.center_x - 0.4 * root.width
        y: root.center_y - 0.4 * root.height


<Slide>:
    button_grab: True
    size_hint_y: None
    height: 54
    canvas.after:
        Color:
            rgba: [0.5411, 0.6862, 0.2352, .1] if root.selected else (0, 0, 0, 0)
        Rectangle:
            size: self.norm_image_size
            pos: self.center_x - self.norm_image_size[0] / 2., self.center_y - self.norm_image_size[1] / 2.

    #height: self.norm_image_size[1] + label.height * 2

    Label:
        id: label
        text: str(root.index + 1)
        x: root.x
        top: root.top
        font_size: 8
        size: (root.width, self.texture_size[1] + 5)
        canvas:
            Color:
                rgba: [0.5411, 0.6862, 0.2352, 1] if root.selected else (0, 0, 0, 1)
            Rectangle:
                pos: self.pos
                size: self.size

<FboCapture>:
    canvas:
        Color:
            rgb: 1, 1, 1,
        Rectangle:
            pos: self.pos
            size: self.size
            texture: self.texture

<MainScreen>:
    plane: plane
    config: config
    config_container: config_container
    tb_objects: tb_objects
    tb_slides: tb_slides
    container_edit: (container_objects, container_slides, config_container)
    container_publish: (container_controls, )
    capture: capture

    # toolbar links
    btn_panel_text: btn_panel_text
    btn_panel_image: btn_panel_image
    btn_savefile: btn_savefile

    FboCapture:
        id: capture
        Widget:
            canvas:
                Color:
                    rgba: bg_color
                Rectangle:
                    size: self.size

        MainPlane:
            id: plane
            ctrl: root
            scale_min: 0.20
            scale_max: 20
            on_touch_down: root.unselect()
            canvas:
                Color:
                    rgba: 1, 0, 0, .5
                Line:
                    points: root.selection_points

    # Toolbar
    BoxLayout:
        id: container_objects
        orientation: 'vertical'
        size_hint_x: None
        width: 64
        canvas:
            Color:
                rgb: tb_color
            Rectangle:
                source: 'data/toolbar_left.png'
                size: self.size
                pos: self.pos

        BoxLayout:
            id: tb_objects
            orientation: 'vertical'
            size_hint_y: None

            ToolbarButton:
                id: btn_panel_text
                group: 'planeobject_adder'
                image: 'text'
                callback: root.toggle_text_panel
                no_toggle: False
                size: 56, 56

            ToolbarButton:
                id: btn_panel_image
                group: 'planeobject_adder'
                image: 'image'
                callback: root.toggle_localfile_panel
                no_toggle: False
                size: 56, 56

        Widget:

        BoxLayout:
            orientation: 'vertical'

            ToolbarButton:
                id: btn_savefile
                image: 'save'
                callback: root.do_save
                no_toggle: True
                size: 56, 56

            ToolbarButton:
                image: 'eye'
                callback: root.do_publish
                no_toggle: True
                size: 56, 56

            ToolbarButton:
                image: 'lock'
                callback: root.toggle_lock
                no_toggle: False
                size: 56, 56

            ToolbarButton:
                image: 'left'
                callback: root.ask_quit
                no_toggle: True
                size: 56, 56

    # Config menu
    StencilView:
        id: config_container
        size_hint_x: None
        x: 56
        FloatLayout:
            height: root.height
            x: 56
            id: config


    # Slides
    BoxLayout:
        id: container_slides
        orientation: 'vertical'
        size_hint_x: None
        width: 56
        pos_hint: {'right': 1}

        canvas:
            Color:
                rgba: tb_color
            Rectangle:
                source: 'data/toolbar_right.png'
                size: (64, self.height)
                pos: (self.x - (64 - self.width), self.y)

        ToolbarButton:
            image: 'add'
            callback: root.create_slide
            no_toggle: True
            size: 56, 56

        ScrollView:
            scroll_timeout: 100
            StackLayout:
                size_hint_y: None
                id: tb_slides

        ToolbarButton:
            image: 'refresh'
            callback: root.update_slides_capture
            no_toggle: True
            size: 56, 56

    # Player
    BoxLayout:
        id: container_controls
        size_hint_y: None

        ToolbarButton:
            image: 'left'
            callback: root.go_previous_slide
            no_toggle: True
            size: 64, 64
            color: tb_color[:3] + [.6]

        Widget

        ToolbarButton:
            image: 'eye'
            callback: root.go_return_action
            no_toggle: True
            size: 64, 64
            color: tb_color[:3] + [.6]

        Widget

        ToolbarButton:
            image: 'right'
            callback: root.go_next_slide
            no_toggle: True
            size: 64, 64
            color: tb_color[:3] + [.6]



<ModalQuit>:
    canvas:
        Color:
            rgba: 0, 0, 0, self.alpha * 0.9
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        spacing: 20
        size: 450, 50
        size_hint: None, None
        center_y: root.top - root.center_y * root.alpha
        center_x: root.center_x

        Button:
            text: 'Return to edit'
            on_press: root.app.leave_quit()

        Button:
            text: 'Discard changes'
            on_press: root.app.do_save(); root.app.ask_quit(force=True)

        Button:
            text: 'Save'
            on_press: root.app.ask_quit(force=True)

